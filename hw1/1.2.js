/*
Пример из задания, на выходе дает десять десяток через одну секунду.
Ожидается получить последовательность от 0 до 9 черзе секунду.
*/
function first() {
    for (var i = 0; i < 10; i++) {
        setTimeout(function(){
            console.log(i);
        }, 1000);
    }
}


/*
Решение с помощью замыкания: создаем анонимную функцию, вызываем с необходимым аргументом, возвращаем другую функцию в setTimeout для вызова в будущем, которая является замыканием, содержащем необходимое значение.
*/
function second() {
    for (var i = 0; i < 10; i++) {
        setTimeout((function(i){
            return function() {
                console.log(i);
            };
        })(i), 1000);
    }
}


/*
Получаем аналогичный результат, запуская цикл через секунду :)
*/
function third() {
    setTimeout(function(){
        for (var i = 0; i < 10; i++) {
            console.log(i);
        }
    }, 1000);
}


/*
Создаем новую функцию-замыкание с помощью биндинга.
Может быть плохим решением, если в контекст должен определяться при вызове.
*/
function fourth() {
    for (var i = 0; i < 10; i++) {
        setTimeout(function(i){
            console.log(i);
        }.bind(null, i), 1000);
    }
}